name: Auto Generate and Push Code

on:
  schedule:
    - cron: "0 0 * * *"  # 每天凌晨运行
  push:
    branches:
      - main  # 当 main 分支有新代码时触发

jobs:
  generate_and_push:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境
    steps:
    # Step 1: 检出代码仓库
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: 生成代码
    - name: Generate code
      run: |
        echo "# This is an auto-generated Python script" > generated_code.py
        echo "def auto_function():" >> generated_code.py
        echo "    print('This code was generated automatically!')" >> generated_code.py
        echo "auto_function()" >> generated_code.py

    # Step 3: 提交并推送代码
    - name: Commit and Push changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "Auto-generated code"
        git push
name: Auto Generate and Push Code

on:
  schedule:
    - cron: "0 0 * * *"  # 每天凌晨运行
  push:
    branches:
      - main  # 当 main 分支有新代码时触发

jobs:
  generate_and_push:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境
    steps:
    # Step 1: 检出代码仓库
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: 生成代码
    - name: Generate code
      run: |
        echo "# This is an auto-generated Python script" > generated_code.py
        echo "def auto_function():" >> generated_code.py
        echo "    print('This code was generated automatically!')" >> generated_code.py
        echo "auto_function()" >> generated_code.py

    # Step 3: 提交并推送代码
    - name: Commit and Push changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "Auto-generated code"
        git push
